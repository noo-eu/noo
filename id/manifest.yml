apiVersion: postgresql.cnpg.io/v1
kind: Database
metadata:
  name: noo-id
spec:
  name: noo_id
  owner: noo_id
  cluster:
    name: noo-main
---
apiVersion: v1
kind: Namespace
metadata:
  name: noo-id
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: noo-id
  namespace: noo-id
spec:
  replicas: 2
  selector:
    matchLabels:
      app: noo-id
  template:
    metadata:
      labels:
        app: noo-id
    spec:
      automountServiceAccountToken: false
      containers:
        - image: ghcr.io/noo-eu/id:latest
          name: noo-id
          ports:
            - containerPort: 3000
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: database-url
                  key: DATABASE_URL
            - name: S3_ENDPOINT
              valueFrom:
                secretKeyRef:
                  name: noo-id-secrets
                  key: S3_ENDPOINT
            - name: S3_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: noo-id-secrets
                  key: S3_ACCESS_KEY_ID
            - name: S3_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: noo-id-secrets
                  key: S3_SECRET_ACCESS_KEY
            - name: S3_PUBLIC_URL_noousr
              value: "https://noousr.noo.eu"
            - name: PAIRWISE_SALT
              valueFrom:
                secretKeyRef:
                  name: noo-id-secrets
                  key: PAIRWISE_SALT
          readinessProbe:
            httpGet:
              port: 3000
              path: /signin
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
              ephemeral-storage: "100Mi"
            limits:
              memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: noo-id
  namespace: noo-id
spec:
  selector:
    app: noo-id
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: noo-id
  namespace: noo-id
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/enable-owasp-core-rules: "true"
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
      SecRuleEngine On
    nginx.ingress.kubernetes.io/configuration-snippet: |
      location /_noo {
        deny all;
        return 403;
      }
spec:
  ingressClassName: nginx
  rules:
    - host: id.noo.eu
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: noo-id
                port:
                  number: 80
  tls:
    - hosts:
        - id.noo.eu
      secretName: noo-id-tls

---

