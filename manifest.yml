apiVersion: v1
kind: Namespace
metadata:
  name: noo-shared
---
# noousr bucket proxy
apiVersion: v1
kind: Service
metadata:
  name: noousr-bucket
  namespace: noo-shared
spec:
  type: ExternalName
  externalName: noousr.fsn1.your-objectstorage.com
  ports:
    - port: 443
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: noousr-bucket
  namespace: noo-shared
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/upstream-vhost: "noousr.fsn1.your-objectstorage.com"
spec:
  tls:
    - hosts:
        - noousr.noo.eu
      secretName: noousr-bucket-tls
  rules:
    - host: noousr.noo.eu
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: noousr-bucket
                port:
                  number: 443
---
# noostatic bucket proxy
apiVersion: v1
kind: Service
metadata:
  name: noostatic-bucket
  namespace: noo-shared
spec:
  type: ExternalName
  externalName: noostatic.fsn1.your-objectstorage.com
  ports:
    - port: 443
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: noostatic-bucket
  namespace: noo-shared
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/upstream-vhost: "noostatic.fsn1.your-objectstorage.com"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      expires 30d;
      add_header Cache-Control "public, max-age=2592000";

      if ($http_origin ~* (https?://(.*\.noo\.eu|localhost(:\d+)?))) {
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type' always;
        add_header 'Vary' 'Origin' always;
      }

      if ($request_method = OPTIONS) {
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type' always;
        add_header 'Content-Length' 0 always;
        add_header 'Content-Type' 'text/plain' always;
        add_header 'Vary' 'Origin' always;
        return 204;
      }
spec:
  tls:
    - hosts:
        - static.noo.eu
      secretName: noostatic-bucket-tls
  rules:
    - host: static.noo.eu
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: noostatic-bucket
                port:
                  number: 443
